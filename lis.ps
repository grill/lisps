%!
(util.ps) run
(eval.ps) run

/pdict <<
  40 { count 0 eq { mark } { isMark not { mark } if } ifelse mark } % '('
  41 { isMark { pop } { genStr } ifelse eval mark } % ')'
  32 { isMark not { genStr mark } if } % ' '
>> def

/execute {
  
} def

/parse {
  {
    dup pdict exch known
    { pdict exch get exec }
    if
  } forall

  count 0 gt
  { pop exec }
  if
} def

/lisps
{
   (Lisp Interpreter by Alex and Gabriel\n)
   print
   {
   (lis.ps >) print flush
      readLineStdin % - string bool
      not
      { pop exit }
      if

      parse
      pstack % print stack
      clear % clear stack
   } loop
   clearvars
} def
